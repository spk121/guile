name: Windows MSys

on:
  # 12:20 PDT
  schedule:
    - cron: "16 6 * * *"
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: MSYS, threads: --without-threads, jit: --enable-jit=no, gmp: --enable-mini-gmp }

    runs-on: windows-latest
    name: Build ${{matrix.sys}}

    steps:
      - name: Configure git
        run: git config --global core.autocrlf input
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Install Msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: >-
            autotools
            gcc
            flex
            gettext-devel
            gmp-devel
            libcrypt-devel
            libffi-devel
            libgc-devel
            libiconv-devel
            libintl
            libreadline-devel
            libunistring-devel
            pkgconf
            gperf
            lzip
            xz
            texinfo
      - name: Restore bootstrap cache
        uses: actions/cache/restore@v3
        id: cache-autotools-restore
        with:
          path: |
            build-aux/**
            po/**
            m4/**
            INSTALL
            configure
            config.status
            libguile/gen-scmconfig.h
            **/Makefile
            libguile/version.h
            check-guile
            benchmark-guile
            meta/guile
            meta/build-env
            meta/uninstalled-env
            meta/gdb-uninstalled-guile
            libguile/guile-snarf
            libguile/guile-snarf-docs
            test-suite/standalone/test-use-srfi
            test-suite/standalone/test-fast-slot-ref
            config.h.in
            config.h
            libtool          
          key: guile-autotools-${{ runner.os }}-${{matrix.sys}}-${{ hashfiles('configure.ac','Makefile.am') }}
      - name: Bootstrap Guile
        if: ${{ steps.cache-autotools-restore.outputs.cache-hit != 'true' }}
        run: |
          ./autogen.sh
        shell: msys2 -o igncr {0}
      - name: Configure
        if: ${{ steps.cache-autotools-restore.outputs.cache-hit != 'true' }}
        run: >-
          ./configure
          CFLAGS="-g -O2 -Wall"
          ${{matrix.threads}}
          ${{matrix.jit}}
          ${{matrix.gmp}}
          --disable-lto
          --disable-dependency-tracking
          --prefix=`pwd`/dist
        shell: msys2 -o igncr {0}
      - name: Save bootstrap cache
        uses: actions/cache/save@v3
        id: cache-autotools-save
        if: always()
        with:
          path: |
            build-aux/**
            po/**
            m4/**
            INSTALL
            configure
            config.status
            libguile/gen-scmconfig.h
            **/Makefile
            libguile/version.h
            check-guile
            benchmark-guile
            meta/guile
            meta/build-env
            meta/uninstalled-env
            meta/gdb-uninstalled-guile
            libguile/guile-snarf
            libguile/guile-snarf-docs
            test-suite/standalone/test-use-srfi
            test-suite/standalone/test-fast-slot-ref
            config.h.in
            config.h
            libtool          
          key: ${{ steps.cache-autotools-restore.outputs.cache-primary-key }}
      - name: Make
        run: |
          export LANG=C.UTF-8 TERM=dumb VERBOSE=true TZ=America/Los_Angeles
          mkdir `pwd`/dist
          make V=1
        shell: msys2 -o igncr {0}
      - name: Run tests
        run: |
          # git config --global --add safe.directory /cygdrive/d/a/guile/guile
          make check V=1
        shell: msys2 -o igncr {0}
      - name: Archive test logs
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: Test logs ${{ matrix.sys }}
          path: check-guile.log

      - name: Install to folder
        run: make install V=1
        shell: msys2 -o igncr {0}
      - name: Archive installed files
        uses: actions/upload-artifact@v3
        with:
          name: Installed files ${{ matrix.sys }}
          path: dist

      - name: Make source tarball
        run: |
          make dist
          gunzip *.tar.gz
        shell: msys2 -o igncr {0}
      - name: Archive source tarball
        uses: actions/upload-artifact@v3
        with:
          name: Source ${{ matrix.sys }}
          path: guile*tar
          
