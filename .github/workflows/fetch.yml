
name: CI

on: 
  # 12:10 PDT
  schedule:
    - cron: "10 19 * * *"
  # Allow manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# Allow cancellation of in-progress runs.
concurrency:
  group: "nightly"
  cancel-in-progress: true

jobs:
  fetch:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3    
    - name: env
      run: export LANG=C.UTF-8 TERM=dumb VERBOSE=true DEBIAN_FRONTEND=noninteractive TZ=America/Los_Angeles
    - name: Fetch upstream
      run: |
        set -x
        UPSTREAM_REPO=https://git.savannah.gnu.org/git/guile.git
        UPSTREAM_BRANCH=main
        LOCAL_BRANCH=main
        echo "UPSTREAM_REPO=$UPSTREAM_REPO"
        echo "UPSTREAM_BRANCH=$UPSTREAM_BRANCH"
        echo "LOCAL_BRANCH=$LOCAL_BRANCH"
        git clone "https://github.com/${GITHUB_REPOSITORY}.git" work
        cd work || { echo "Missing work dir" && exist 2 ; }
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        #git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        git remote set-url origin "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY"
        git remote add upstream "$UPSTREAM_REPO"
        git fetch upstream #$UPSTREAM_BRANCH:$UPSTREAM_BRANCH $UPSTREAM_BRANCH
        git remote -v
        git checkout $LOCAL_BRANCH

        MERGE_RESULT=$(git merge upstream/$UPSTREAM_BRANCH)
        if [[ $MERGE_RESULT != *"Already up to date."* ]]; then
          git commit -m "Merged upstream"  
          git push origin $LOCAL_BRANCH
        fi
        cd ..
        rm -rf work
      shell: bash {0}
      
